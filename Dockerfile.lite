# Lightweight Docker build for OSINT Suite (Core features only)
# This excludes heavy ML dependencies for faster builds and smaller images
# For ML features, use Dockerfile.ml

# Builder stage
FROM python:3.12-slim@sha256:47ae396f09c1303b8653019811a8498470603d7ffefc29cb07c88f1f8cb3d19f AS builder
ARG GIT_COMMIT
ARG GIT_REPO

# Install minimal build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libffi-dev \
    libssl-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash osint

# Set up Python environment
WORKDIR /app

# Use core requirements (no heavy ML packages)
COPY requirements_core.txt .
RUN python -m pip install --no-cache-dir --user --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --user -r requirements_core.txt

# Production stage
FROM python:3.12-slim@sha256:47ae396f09c1303b8653019811a8498470603d7ffefc29cb07c88f1f8cb3d19f AS production
ARG GIT_COMMIT
ARG GIT_REPO

# Install minimal runtime dependencies
RUN apt-get update && apt-get -y upgrade && apt-get install -y --no-install-recommends \
    curl \
    procps \
    ca-certificates \
    libexpat1 \
    && rm -rf /var/lib/apt/lists/*

RUN python -m pip install --no-cache-dir --upgrade pip

# Create non-root user
RUN useradd --create-home --shell /bin/bash osint

# Copy Python packages from builder
COPY --from=builder --chown=osint:osint /root/.local /home/osint/.local

# Set up application
WORKDIR /app
COPY --chown=osint:osint . .

# Create required directories
RUN install -d -o osint -g osint /app/output/encrypted /app/output/audit /app/output/logs /app/logs /app/policies

# Switch to non-root user
USER osint

# Set environment variables
ENV PATH=/home/osint/.local/bin:$PATH
ENV PYTHONPATH=/app
ENV OSINT_USE_KEYRING=false
ENV OSINT_TEST_MODE=false

# OCI labels
LABEL org.opencontainers.image.source="https://github.com/Watchman8925/passive-osint-suite" \
    org.opencontainers.image.description="Passive OSINT Suite API server (lightweight)" \
    org.opencontainers.image.licenses="MIT" \
    org.opencontainers.image.title="Passive OSINT Suite" \
    org.opencontainers.image.vendor="Watchman8925" \
    org.opencontainers.image.documentation="https://github.com/Watchman8925/passive-osint-suite/blob/main/README.md" \
    maintainer="Watchman8925" \
    security.compliance="CIS Docker Benchmarks" \
    org.opencontainers.image.revision=${GIT_COMMIT} \
    org.opencontainers.image.source=${GIT_REPO}

# Simple health check (no ML dependencies)
HEALTHCHECK --interval=30s --timeout=15s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose API port
EXPOSE 8000

# Default command
CMD ["python", "-m", "uvicorn", "api.api_server:app", "--host", "0.0.0.0", "--port", "8000"]