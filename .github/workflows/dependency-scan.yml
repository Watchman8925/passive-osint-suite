name: Dependency Security Scan

on:
  push:
    branches: ["**"]
    paths:
      - "requirements.txt"
      - "requirements_minimal.txt"
      - "package.json"
      - "package-lock.json"
      - "pyproject.toml"
      - ".github/workflows/dependency-scan.yml"
  pull_request:
    branches: ["**"]
    paths:
      - "requirements.txt"
      - "requirements_minimal.txt"
      - "package.json"
      - "package-lock.json"
      - "pyproject.toml"
  schedule:
    # Run daily at 3 AM UTC
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
  python-safety:
    name: Python Dependency Scan (Safety)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install Safety
        run: |
          pip install safety
      
      - name: Scan requirements.txt
        run: |
          echo "## Python Dependency Scan (requirements.txt)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if safety check --file requirements.txt --output text > safety-report.txt 2>&1; then
            echo "✅ No known vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Vulnerabilities detected:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat safety-report.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true
      
      - name: Upload Safety Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: safety-report-${{ github.sha }}
          path: safety-report.txt
          retention-days: 30

  python-pip-audit:
    name: Python Dependency Scan (pip-audit)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install pip-audit
        run: |
          pip install pip-audit
      
      - name: Audit requirements.txt
        run: |
          echo "## Python Dependency Audit (pip-audit)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if pip-audit --requirement requirements.txt --format json > pip-audit-report.json 2>&1; then
            echo "✅ No known vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Vulnerabilities detected" >> $GITHUB_STEP_SUMMARY
            pip-audit --requirement requirements.txt --format markdown >> $GITHUB_STEP_SUMMARY || true
          fi
        continue-on-error: true
      
      - name: Upload pip-audit Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report-${{ github.sha }}
          path: pip-audit-report.json
          retention-days: 30

  npm-audit:
    name: NPM Dependency Scan
    runs-on: ubuntu-latest
    if: hashFiles('package.json') != ''
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      
      - name: Check for package.json
        id: check-npm
        run: |
          if [ -f "package.json" ]; then
            echo "has_npm=true" >> $GITHUB_OUTPUT
          else
            echo "has_npm=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Install dependencies
        if: steps.check-npm.outputs.has_npm == 'true'
        run: |
          npm ci --ignore-scripts || npm install --ignore-scripts
      
      - name: Run npm audit
        if: steps.check-npm.outputs.has_npm == 'true'
        run: |
          echo "## NPM Dependency Audit" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if npm audit --audit-level=moderate --json > npm-audit-report.json 2>&1; then
            echo "✅ No moderate or higher vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Vulnerabilities detected:" >> $GITHUB_STEP_SUMMARY
            npm audit --audit-level=moderate >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Action Required:** Run \`npm audit fix\` to address vulnerabilities" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true
      
      - name: Upload npm audit report
        if: always() && steps.check-npm.outputs.has_npm == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report-${{ github.sha }}
          path: npm-audit-report.json
          retention-days: 30

  dependency-review:
    name: Dependency Review (Pull Requests)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          comment-summary-in-pr: true

  summary:
    name: Dependency Scan Summary
    runs-on: ubuntu-latest
    needs: [python-safety, python-pip-audit, npm-audit]
    if: always()
    
    steps:
      - name: Generate Summary
        run: |
          echo "## 📦 Dependency Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scanner | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Python Safety | ${{ needs.python-safety.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Python pip-audit | ${{ needs.python-pip-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| NPM Audit | ${{ needs.npm-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Action Items" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.python-safety.result }}" == "failure" ]] || [[ "${{ needs.python-pip-audit.result }}" == "failure" ]]; then
            echo "**Python Dependencies:**" >> $GITHUB_STEP_SUMMARY
            echo "1. Review the scan artifacts for details" >> $GITHUB_STEP_SUMMARY
            echo "2. Update vulnerable packages: \`pip install --upgrade <package>\`" >> $GITHUB_STEP_SUMMARY
            echo "3. Test thoroughly after updates" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.npm-audit.result }}" == "failure" ]]; then
            echo "**NPM Dependencies:**" >> $GITHUB_STEP_SUMMARY
            echo "1. Run \`npm audit fix\` to auto-fix issues" >> $GITHUB_STEP_SUMMARY
            echo "2. For breaking changes, run \`npm audit fix --force\`" >> $GITHUB_STEP_SUMMARY
            echo "3. Review and test all changes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### 📚 Resources" >> $GITHUB_STEP_SUMMARY
          echo "- [Security Policy](../SECURITY.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Dependency Update Guidelines](../CONTRIBUTING.md)" >> $GITHUB_STEP_SUMMARY
