name: Build, Sign, and Verify Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Minimal permissions for GitHub token (principle of least privilege)
permissions:
  contents: read

jobs:
  build-sign-verify:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      # Remove DOCKER_CONTENT_TRUST for CI (requires complex key setup)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        # Only login on push to main or when secrets are available
        if: github.event_name == 'push' || (secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build with provenance and SBOM
        # Build with attestations only when pushing to registry
        run: |
          GIT_COMMIT=$(git rev-parse HEAD)
          if [[ "${{ github.event_name }}" == "push" ]] || [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]]; then
            docker build --attest=provenance=mode=max --attest=sbom=type=spdx \
              --build-arg GIT_COMMIT="$GIT_COMMIT" \
              --build-arg GIT_REPO="https://github.com/Watchman8925/passive-osint-suite" \
              -t watchman8925/passive-osint-suite:latest \
              -f Dockerfile.lite .
          else
            # Build without attestations for PRs (attestations require push to registry)
            docker build \
              --build-arg GIT_COMMIT="$GIT_COMMIT" \
              --build-arg GIT_REPO="https://github.com/Watchman8925/passive-osint-suite" \
              -t watchman8925/passive-osint-suite:latest \
              -f Dockerfile.lite .
          fi
      - name: Push image
        # Only push on main branch or when secrets are available
        if: github.event_name == 'push' || (secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '')
        run: |
          docker push watchman8925/passive-osint-suite:latest
      - name: Verify image exists
        # Only verify remote image when it was pushed
        if: github.event_name == 'push' || (secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '')
        run: |
          docker manifest inspect watchman8925/passive-osint-suite:latest
      - name: Install syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh
          sudo mv ./bin/syft /usr/local/bin/syft
      - name: Verify SBOM
        # Generate SBOM from local image (works even without push)
        run: |
          syft watchman8925/passive-osint-suite:latest -o spdx-json=sbom.json
          syft watchman8925/passive-osint-suite:latest
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  dockle-scan:
    runs-on: ubuntu-latest
    needs: build-sign-verify
    # Only run if image was pushed (on main branch or with secrets)
    if: github.event_name == 'push' || (secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Dockle scan
        run: |
          docker pull watchman8925/passive-osint-suite:latest
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            goodwithtech/dockle:latest --format json --output dockle-results.json \
            watchman8925/passive-osint-suite:latest
      - name: Upload Dockle results
        uses: actions/upload-artifact@v4
        with:
          name: dockle-results
          path: dockle-results.json

  trivy-scan:
    runs-on: ubuntu-latest
    needs: build-sign-verify
    # Only run if image was pushed (on main branch or with secrets)
    if: github.event_name == 'push' || (secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Trivy vulnerability scan
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          image-ref: watchman8925/passive-osint-suite:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
