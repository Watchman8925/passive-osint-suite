/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/health": {
    /**
     * Health Check
     * @description Primary health check endpoint consumed by dashboard ribbon.
     */
    get: operations["health_check_api_health_get"];
  };
  "/api/health/detailed": {
    /**
     * Detailed Health Check
     * @description Detailed health check with service connectivity tests.
     */
    get: operations["detailed_health_check_api_health_detailed_get"];
  };
  "/tor/status": {
    /**
     * Tor Status
     * @description Expose Tor proxy status (no external network calls).
     */
    get: operations["tor_status_tor_status_get"];
  };
  "/api/system/status": {
    /**
     * System Status Alias
     * @description Alias for /api/health to match frontend expectations.
     */
    get: operations["system_status_alias_api_system_status_get"];
  };
  "/health": {
    /**
     * Health Fallback
     * @description Fallback health endpoint without /api prefix for compatibility.
     */
    get: operations["health_fallback_health_get"];
  };
  "/api/anonymity/tor/status": {
    /**
     * Anonymity Tor Status
     * @description Alias for /tor/status under /api/anonymity path.
     */
    get: operations["anonymity_tor_status_api_anonymity_tor_status_get"];
  };
  "/api/capabilities": {
    /**
     * List Capabilities
     * @description List registered capabilities (static registry for now).
     */
    get: operations["list_capabilities_api_capabilities_get"];
  };
  "/api/investigations/{investigation_id}/plan": {
    /**
     * Get Investigation Plan
     * @description Return (build if absent) the plan for an investigation.
     */
    get: operations["get_investigation_plan_api_investigations__investigation_id__plan_get"];
  };
  "/api/investigations/{investigation_id}/execute/all": {
    /** Execute All Tasks */
    post: operations["execute_all_tasks_api_investigations__investigation_id__execute_all_post"];
  };
  "/api/investigations/{investigation_id}/evidence/provenance": {
    /** Investigation Provenance */
    get: operations["investigation_provenance_api_investigations__investigation_id__evidence_provenance_get"];
  };
  "/api/geo": {
    /**
     * Geo Snapshot
     * @description Return a lightweight snapshot of geospatial intelligence data.
     * Currently returns placeholder points and flight routes for the mapping
     * widget. In future iterations this will aggregate:
     *   * Resolved IP geolocations (network / infrastructure module)
     *   * Flight paths (aviation intelligence module)
     *   * Potential infrastructure relationship lines
     *
     * Response schema:
     * {
     *   "generated_at": ISO8601,
     *   "ip_points": [ { ip, lat, lon, asn, label } ],
     *                 "flight_routes": [
     *                     {
     *                         flight,
     *                         from: {icao,lat,lon,city},
     *                         to: {...},
     *                         path: [[lat,lon],...],
     *                         status
     *                     }
     *                 ]
     * }
     * This endpoint is unauthenticated for rapid internal dashboard rendering.
     * DO NOT expose publicly without access controls.
     */
    get: operations["geo_snapshot_api_geo_get"];
  };
  "/api/investigations": {
    /**
     * List Investigations
     * @description List user's investigations with optional filters and metadata.
     *
     * Query Params:
     *   skip, limit: pagination window
     *   status: optional status filter (created|running|completed|archived)
     *   include_archived: if true include archived items alongside active
     *   include_meta: if true wrap items with {items:[], meta:{total,skip,limit}}
     */
    get: operations["list_investigations_api_investigations_get"];
    /**
     * Create Investigation
     * @description Create a new OSINT investigation
     */
    post: operations["create_investigation_api_investigations_post"];
  };
  "/api/investigations/{investigation_id}": {
    /**
     * Get Investigation
     * @description Get investigation details with results
     */
    get: operations["get_investigation_api_investigations__investigation_id__get"];
  };
  "/api/investigations/{investigation_id}/start": {
    /**
     * Start Investigation
     * @description Start OSINT investigation execution
     */
    post: operations["start_investigation_api_investigations__investigation_id__start_post"];
  };
  "/api/investigations/{investigation_id}/tasks": {
    /**
     * Investigation Tasks
     * @description Return detailed (optionally filtered/paginated) task list.
     *
     * Query params:
     *   skip, limit: pagination window.
     *   status: optional status filter
     *   task_type: optional task type filter
     *   include_meta: if true include metadata
     */
    get: operations["investigation_tasks_api_investigations__investigation_id__tasks_get"];
  };
  "/api/modules": {
    /**
     * List Modules
     * @description List all available OSINT modules with their metadata.
     */
    get: operations["list_modules_api_modules_get"];
  };
  "/api/modules/categories": {
    /**
     * List Module Categories
     * @description List all available module categories.
     */
    get: operations["list_module_categories_api_modules_categories_get"];
  };
  "/api/modules/category/{category}": {
    /**
     * Get Modules By Category Endpoint
     * @description Get all modules in a specific category.
     */
    get: operations["get_modules_by_category_endpoint_api_modules_category__category__get"];
  };
  "/api/modules/execute": {
    /**
     * Execute Module
     * @description Execute an OSINT module with given parameters.
     */
    post: operations["execute_module_api_modules_execute_post"];
  };
  "/api/modules/{module_name}": {
    /**
     * Get Module Info
     * @description Get detailed information about a specific module.
     */
    get: operations["get_module_info_api_modules__module_name__get"];
  };
  "/api/dev/token": {
    /**
     * Dev Token
     * @description Issue a development JWT for local VS Code extension.
     * Enabled ONLY in development mode with ENABLE_DEV_AUTH=1.
     * NEVER enable this in production.
     */
    post: operations["dev_token_api_dev_token_post"];
  };
  "/api/ai/analyze": {
    /**
     * Ai Analysis
     * @description Request AI analysis of investigation data
     */
    post: operations["ai_analysis_api_ai_analyze_post"];
  };
  "/api/reports/generate": {
    /**
     * Generate Report
     * @description Generate investigation report with enhanced features
     */
    post: operations["generate_report_api_reports_generate_post"];
  };
  "/api/reports/download/{filename}": {
    /**
     * Download Report
     * @description Download generated report file
     */
    get: operations["download_report_api_reports_download__filename__get"];
  };
  "/api/reports/schedule": {
    /**
     * Schedule Report
     * @description Schedule recurring reports
     */
    post: operations["schedule_report_api_reports_schedule_post"];
  };
  "/api/reports/schedule/{schedule_id}": {
    /**
     * Remove Scheduled Report
     * @description Remove a scheduled report
     */
    delete: operations["remove_scheduled_report_api_reports_schedule__schedule_id__delete"];
  };
  "/api/nlp/parse": {
    /**
     * Parse Nlp Command
     * @description Parse natural language command and return execution plan
     */
    post: operations["parse_nlp_command_api_nlp_parse_post"];
  };
  "/api/nlp/execute": {
    /**
     * Execute Nlp Command
     * @description Parse and execute natural language command
     */
    post: operations["execute_nlp_command_api_nlp_execute_post"];
  };
  "/api/nlp/examples": {
    /**
     * Get Nlp Examples
     * @description Get example natural language commands
     */
    get: operations["get_nlp_examples_api_nlp_examples_get"];
  };
  "/api/chat/conversations": {
    /**
     * List Chat Conversations
     * @description List all conversations
     */
    get: operations["list_chat_conversations_api_chat_conversations_get"];
    /**
     * Create Chat Conversation
     * @description Create a new chat conversation
     */
    post: operations["create_chat_conversation_api_chat_conversations_post"];
  };
  "/api/chat/messages": {
    /**
     * Add Chat Message
     * @description Add a message to a conversation
     */
    post: operations["add_chat_message_api_chat_messages_post"];
  };
  "/api/chat/conversations/{conversation_id}": {
    /**
     * Get Chat Conversation
     * @description Get a conversation with all messages
     */
    get: operations["get_chat_conversation_api_chat_conversations__conversation_id__get"];
    /**
     * Delete Chat Conversation
     * @description Delete a conversation
     */
    delete: operations["delete_chat_conversation_api_chat_conversations__conversation_id__delete"];
  };
  "/api/chat/search": {
    /**
     * Search Chat Messages
     * @description Search messages by content
     */
    get: operations["search_chat_messages_api_chat_search_get"];
  };
  "/api/chat/stats": {
    /**
     * Get Chat Stats
     * @description Get chat history statistics
     */
    get: operations["get_chat_stats_api_chat_stats_get"];
  };
  "/api/chat/conversations/{conversation_id}/export": {
    /**
     * Export Chat Conversation
     * @description Export a conversation to file
     */
    get: operations["export_chat_conversation_api_chat_conversations__conversation_id__export_get"];
  };
  "/api/reports/scheduled": {
    /**
     * Get Scheduled Reports
     * @description Get list of scheduled reports
     */
    get: operations["get_scheduled_reports_api_reports_scheduled_get"];
  };
  "/api/reports/process-scheduled": {
    /**
     * Process Scheduled Reports
     * @description Process all due scheduled reports (internal endpoint)
     */
    post: operations["process_scheduled_reports_api_reports_process_scheduled_post"];
  };
  "/api/graph/stats": {
    /**
     * Get Graph Statistics
     * @description Get graph database statistics
     */
    get: operations["get_graph_statistics_api_graph_stats_get"];
  };
  "/api/graph/entities": {
    /**
     * Create Graph Entity
     * @description Create an entity in the graph database
     */
    post: operations["create_graph_entity_api_graph_entities_post"];
  };
  "/api/graph/relationships": {
    /**
     * Create Graph Relationship
     * @description Create a relationship in the graph database
     */
    post: operations["create_graph_relationship_api_graph_relationships_post"];
  };
  "/api/graph/entities/{entity_id}/related": {
    /**
     * Get Related Entities
     * @description Get entities related to the specified entity
     */
    get: operations["get_related_entities_api_graph_entities__entity_id__related_get"];
  };
  "/api/graph/entities/search": {
    /**
     * Search Entities
     * @description Search for entities by name
     */
    get: operations["search_entities_api_graph_entities_search_get"];
  };
  "/api/graph/path": {
    /**
     * Find Entity Path
     * @description Find the shortest path between two entities
     */
    get: operations["find_entity_path_api_graph_path_get"];
  };
  "/api/graph/communities": {
    /**
     * Detect Communities
     * @description Detect communities/clusters in the graph
     */
    get: operations["detect_communities_api_graph_communities_get"];
  };
  "/api/graph/centrality": {
    /**
     * Calculate Centrality
     * @description Calculate centrality measures for entities
     */
    get: operations["calculate_centrality_api_graph_centrality_get"];
  };
  "/api/graph/import": {
    /**
     * Import Investigation To Graph
     * @description Import investigation data into the graph database
     */
    post: operations["import_investigation_to_graph_api_graph_import_post"];
  };
  "/api/graph/export": {
    /**
     * Export Graph Data
     * @description Export graph data for external analysis
     */
    get: operations["export_graph_data_api_graph_export_get"];
  };
  "/api/feeds/status": {
    /**
     * Get Feeds Status
     * @description Get the current status of all intelligence feeds
     */
    get: operations["get_feeds_status_api_feeds_status_get"];
  };
  "/api/feeds/{feed_name}/enable": {
    /**
     * Enable Feed
     * @description Enable a specific intelligence feed
     */
    post: operations["enable_feed_api_feeds__feed_name__enable_post"];
  };
  "/api/feeds/{feed_name}/disable": {
    /**
     * Disable Feed
     * @description Disable a specific intelligence feed
     */
    post: operations["disable_feed_api_feeds__feed_name__disable_post"];
  };
  "/api/feeds/alerts": {
    /**
     * Get Recent Alerts
     * @description Get recent intelligence alerts
     */
    get: operations["get_recent_alerts_api_feeds_alerts_get"];
  };
  "/api/feeds/alerts/{alert_id}/acknowledge": {
    /**
     * Acknowledge Alert
     * @description Acknowledge an intelligence alert
     */
    post: operations["acknowledge_alert_api_feeds_alerts__alert_id__acknowledge_post"];
  };
  "/api/feeds/subscribe": {
    /**
     * Subscribe To Alerts
     * @description Subscribe to specific types of intelligence alerts
     */
    post: operations["subscribe_to_alerts_api_feeds_subscribe_post"];
  };
  "/api/feeds/subscription/{subscription_id}": {
    /**
     * Unsubscribe From Alerts
     * @description Unsubscribe from intelligence alerts
     */
    delete: operations["unsubscribe_from_alerts_api_feeds_subscription__subscription_id__delete"];
  };
  "/api/feeds/sources": {
    /**
     * Get Feed Sources
     * @description Get information about available intelligence feed sources
     */
    get: operations["get_feed_sources_api_feeds_sources_get"];
  };
  "/api/feeds/{feed_name}/configure": {
    /**
     * Configure Feed Api Key
     * @description Configure API key and settings for a specific feed
     */
    post: operations["configure_feed_api_key_api_feeds__feed_name__configure_post"];
  };
  "/api/feeds/custom": {
    /**
     * Add Custom Feed
     * @description Add a custom intelligence feed source
     */
    post: operations["add_custom_feed_api_feeds_custom_post"];
  };
  "/api/feeds/{feed_name}": {
    /**
     * Remove Feed
     * @description Remove an intelligence feed source
     */
    delete: operations["remove_feed_api_feeds__feed_name__delete"];
  };
  "/api/feeds/{feed_name}/test": {
    /**
     * Test Feed Connection
     * @description Test connection to a specific intelligence feed
     */
    post: operations["test_feed_connection_api_feeds__feed_name__test_post"];
  };
  "/api/investigations/{investigation_id}/demo/seed-tasks": {
    /**
     * Seed Demo Tasks
     * @description Seed synthetic tasks for demo UI when advanced manager is not active.
     *
     * Returns list of synthetic tasks. If advanced manager present, instructs
     * user to rely on real tasks instead.
     */
    post: operations["seed_demo_tasks_api_investigations__investigation_id__demo_seed_tasks_post"];
  };
  "/auth/login": {
    /**
     * Login
     * @description Authenticate user and return access token
     */
    post: operations["login_auth_login_post"];
  };
  "/auth/logout": {
    /**
     * Logout
     * @description Logout user and invalidate session
     */
    post: operations["logout_auth_logout_post"];
  };
  "/auth/me": {
    /**
     * Get Current User Info
     * @description Get current user information
     */
    get: operations["get_current_user_info_auth_me_get"];
  };
  "/users": {
    /**
     * List Users
     * @description List users
     */
    get: operations["list_users_users_get"];
    /**
     * Create User
     * @description Create new user
     */
    post: operations["create_user_users_post"];
  };
  "/users/{user_id}": {
    /**
     * Update User
     * @description Update user
     */
    put: operations["update_user_users__user_id__put"];
    /**
     * Delete User
     * @description Delete user
     */
    delete: operations["delete_user_users__user_id__delete"];
  };
  "/auth/api-keys": {
    /**
     * List Api Keys
     * @description List user's API keys
     */
    get: operations["list_api_keys_auth_api_keys_get"];
    /**
     * Create Api Key
     * @description Create API key
     */
    post: operations["create_api_key_auth_api_keys_post"];
  };
  "/auth/api-keys/{key_id}": {
    /**
     * Revoke Api Key
     * @description Revoke API key
     */
    delete: operations["revoke_api_key_auth_api_keys__key_id__delete"];
  };
  "/security/report": {
    /**
     * Get Security Report
     * @description Get security report
     */
    get: operations["get_security_report_security_report_get"];
  };
  "/security/compliance": {
    /**
     * Get Compliance Report
     * @description Get compliance report
     */
    get: operations["get_compliance_report_security_compliance_get"];
  };
  "/security/alerts": {
    /**
     * Get Security Alerts
     * @description Get security alerts
     */
    get: operations["get_security_alerts_security_alerts_get"];
  };
  "/api/autopivot/suggest": {
    /**
     * Suggest Autopivots
     * @description Get AI-powered pivot suggestions for an investigation
     */
    post: operations["suggest_autopivots_api_autopivot_suggest_post"];
  };
  "/api/autopivot/autonomous": {
    /**
     * Start Autonomous Investigation
     * @description Start fully autonomous investigation with automatic pivoting
     */
    post: operations["start_autonomous_investigation_api_autopivot_autonomous_post"];
  };
  "/api/enhanced/analyze": {
    /**
     * Enhanced Offline Analysis
     * @description Get enhanced offline LLM analysis using local models (no API key required).
     * Provides detailed, user-friendly breakdown of findings.
     */
    post: operations["enhanced_offline_analysis_api_enhanced_analyze_post"];
  };
  "/api/investigation/tracking/create": {
    /**
     * Create Investigation Tracking
     * @description Create investigation tracking for persistent findings storage
     */
    post: operations["create_investigation_tracking_api_investigation_tracking_create_post"];
  };
  "/api/investigation/tracking/finding": {
    /**
     * Add Investigation Finding
     * @description Add a finding to investigation tracking (builds progressively without data loss)
     */
    post: operations["add_investigation_finding_api_investigation_tracking_finding_post"];
  };
  "/api/investigation/tracking/{investigation_id}/findings": {
    /**
     * Get Investigation Findings
     * @description Get all findings for an investigation
     */
    get: operations["get_investigation_findings_api_investigation_tracking__investigation_id__findings_get"];
  };
  "/api/investigation/tracking/{investigation_id}/leads": {
    /**
     * Get Investigation Leads
     * @description Get all investigation leads with explanations
     */
    get: operations["get_investigation_leads_api_investigation_tracking__investigation_id__leads_get"];
  };
  "/api/investigation/tracking/{investigation_id}/summary": {
    /**
     * Get Investigation Summary
     * @description Get comprehensive investigation summary
     */
    get: operations["get_investigation_summary_api_investigation_tracking__investigation_id__summary_get"];
  };
  "/api/reports/user-friendly": {
    /**
     * Generate User Friendly Report
     * @description Generate comprehensive user-friendly report with detailed breakdowns.
     * Includes: What We Know, What We Think, What We Can Find, Why It Matters
     */
    post: operations["generate_user_friendly_report_api_reports_user_friendly_post"];
  };
  "/api/investigation/tracking/{investigation_id}/export": {
    /**
     * Export Investigation Data
     * @description Export complete investigation data (json or markdown)
     */
    get: operations["export_investigation_data_api_investigation_tracking__investigation_id__export_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * AIAnalysisRequest
     * @description Model for AI analysis requests
     */
    AIAnalysisRequest: {
      /** Investigation Id */
      investigation_id: string;
      /**
       * Analysis Type
       * @enum {string}
       */
      analysis_type: "summary" | "threat_assessment" | "recommendations" | "report";
      /** Context */
      context?: string | null;
      /**
       * Include Raw Data
       * @default false
       */
      include_raw_data?: boolean;
    };
    /**
     * APIKeyCreateRequest
     * @description API key creation request model
     */
    APIKeyCreateRequest: {
      /** Name */
      name: string;
      /** Permissions */
      permissions?: string[];
      /**
       * Expires In Days
       * @default 365
       */
      expires_in_days?: number | null;
    };
    /**
     * APIKeyResponse
     * @description API key response model
     */
    APIKeyResponse: {
      /** Key Id */
      key_id: string;
      /** Name */
      name: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Expires At */
      expires_at: string | null;
      /** Permissions */
      permissions: string[];
      /** Is Active */
      is_active: boolean;
    };
    /**
     * AutonomousInvestigationRequest
     * @description Request for autonomous investigation
     */
    AutonomousInvestigationRequest: {
      /**
       * Target
       * @description Initial investigation target
       */
      target: string;
      /**
       * Target Type
       * @description Type of target (domain, email, ip, etc.)
       */
      target_type: string;
      /**
       * Max Depth
       * @description Maximum pivot depth
       * @default 3
       */
      max_depth?: number;
      /**
       * Max Pivots Per Level
       * @description Maximum pivots per level
       * @default 3
       */
      max_pivots_per_level?: number;
    };
    /**
     * AutopivotRequest
     * @description Request for autopivot suggestions
     */
    AutopivotRequest: {
      /**
       * Investigation Id
       * @description Investigation ID to analyze
       */
      investigation_id: string;
      /**
       * Max Pivots
       * @description Maximum number of pivot suggestions
       * @default 5
       */
      max_pivots?: number;
    };
    /** Body_create_user_users_post */
    Body_create_user_users_post: {
      request: components["schemas"]["UserCreateRequest"];
      current_user: components["schemas"]["User"];
    };
    /** Body_subscribe_to_alerts_api_feeds_subscribe_post */
    Body_subscribe_to_alerts_api_feeds_subscribe_post: {
      /** Alert Types */
      alert_types: string[];
      /** Notification Channels */
      notification_channels?: string[] | null;
    };
    /** Body_update_user_users__user_id__put */
    Body_update_user_users__user_id__put: {
      request: components["schemas"]["UserUpdateRequest"];
      current_user: components["schemas"]["User"];
    };
    /** CapabilityModel */
    CapabilityModel: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Category */
      category: string;
      /** Version */
      version: string;
      /** Inputs */
      inputs: {
        [key: string]: string;
      };
      /** Produces */
      produces: string[];
      /** Dependencies */
      dependencies: string[];
      /** Cost Weight */
      cost_weight: number;
      /** Risk Level */
      risk_level: string;
      /** Enabled */
      enabled: boolean;
    };
    /**
     * ChatMessageRequest
     * @description Request to add chat message
     */
    ChatMessageRequest: {
      /**
       * Conversation Id
       * @description Conversation ID
       */
      conversation_id: string;
      /**
       * Role
       * @description Message role (user or assistant)
       */
      role: string;
      /**
       * Content
       * @description Message content
       */
      content: string;
      /**
       * Metadata
       * @description Optional metadata
       */
      metadata?: {
        [key: string]: unknown;
      } | null;
    };
    /**
     * CreateConversationRequest
     * @description Request to create conversation
     */
    CreateConversationRequest: {
      /**
       * Investigation Id
       * @description Optional investigation ID
       */
      investigation_id?: string | null;
      /**
       * Title
       * @description Conversation title
       * @default New Conversation
       */
      title?: string;
      /**
       * Metadata
       * @description Optional metadata
       */
      metadata?: {
        [key: string]: unknown;
      } | null;
    };
    /**
     * DetailedReportRequest
     * @description Request for user-friendly detailed report
     */
    DetailedReportRequest: {
      /**
       * Investigation Id
       * @description Investigation ID
       */
      investigation_id: string;
      /**
       * Include Analysis
       * @description Include AI analysis
       * @default true
       */
      include_analysis?: boolean;
      /**
       * Include Leads
       * @description Include investigation leads
       * @default true
       */
      include_leads?: boolean;
    };
    /**
     * EnhancedAnalysisRequest
     * @description Request for enhanced offline LLM analysis
     */
    EnhancedAnalysisRequest: {
      /**
       * Investigation Id
       * @description Investigation ID to analyze
       */
      investigation_id: string;
      /**
       * Focus
       * @description Analysis focus (comprehensive, threats, connections, timeline)
       * @default comprehensive
       */
      focus?: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * InvestigationCreate
     * @description Model for creating new investigations with input validation
     */
    InvestigationCreate: {
      /**
       * Name
       * @description Investigation name
       */
      name: string;
      /**
       * Description
       * @description Investigation description
       */
      description?: string | null;
      /**
       * Targets
       * @description List of targets to investigate
       */
      targets: string[];
      /**
       * Investigation Type
       * @description Type of investigation
       */
      investigation_type: string;
      /**
       * Priority
       * @description Investigation priority level
       * @default medium
       */
      priority?: string;
      /** Tags */
      tags?: string[];
      /** Scheduled Start */
      scheduled_start?: string | null;
      /**
       * Auto Reporting
       * @default true
       */
      auto_reporting?: boolean;
    };
    /**
     * InvestigationFindingRequest
     * @description Request to add finding to investigation
     */
    InvestigationFindingRequest: {
      /**
       * Investigation Id
       * @description Investigation ID
       */
      investigation_id: string;
      /**
       * Finding Type
       * @description Type of finding (email, domain, ip, etc.)
       */
      finding_type: string;
      /**
       * Value
       * @description Finding value
       */
      value: string;
      /**
       * Source Module
       * @description Source module
       */
      source_module: string;
      /**
       * Confidence
       * @description Confidence score (0-1)
       * @default 0.8
       */
      confidence?: number;
      /**
       * Metadata
       * @description Additional metadata
       */
      metadata?: {
        [key: string]: unknown;
      } | null;
    };
    /**
     * LoginRequest
     * @description Login request model
     */
    LoginRequest: {
      /** Username */
      username: string;
      /** Password */
      password: string;
    };
    /**
     * LoginResponse
     * @description Login response model
     */
    LoginResponse: {
      /** Access Token */
      access_token: string;
      /**
       * Token Type
       * @default bearer
       */
      token_type?: string;
      /** Expires In */
      expires_in: number;
      /** User */
      user: {
        [key: string]: unknown;
      };
    };
    /**
     * ModuleExecutionRequest
     * @description Request to execute a module with parameters
     */
    ModuleExecutionRequest: {
      /** Module Name */
      module_name: string;
      /** Parameters */
      parameters?: {
        [key: string]: unknown;
      };
    };
    /**
     * ModuleInfo
     * @description Information about an OSINT module
     */
    ModuleInfo: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Category */
      category: string;
      /** Class Name */
      class_name: string;
    };
    /**
     * NLPCommandRequest
     * @description Request for natural language command
     */
    NLPCommandRequest: {
      /**
       * Command
       * @description Natural language command to parse and execute
       */
      command: string;
      /**
       * Investigation Id
       * @description Optional investigation ID to link execution
       */
      investigation_id?: string | null;
      /**
       * Execute
       * @description Whether to execute the command or just parse it
       * @default false
       */
      execute?: boolean;
    };
    /** PlanModel */
    PlanModel: {
      /** Investigation Id */
      investigation_id: string;
      /** Tasks */
      tasks: components["schemas"]["PlannedTaskModel"][];
    };
    /** PlannedTaskModel */
    PlannedTaskModel: {
      /** Id */
      id: string;
      /** Capability Id */
      capability_id: string;
      /** Inputs */
      inputs: {
        [key: string]: string;
      };
      /** Depends On */
      depends_on: string[];
      /** Status */
      status: string;
    };
    /** User */
    User: {
      /** Id */
      id: string;
      /** Username */
      username: string;
      /** Email */
      email: string;
      /** Full Name */
      full_name: string;
      /** Roles */
      roles: string[];
      /** Permissions */
      permissions: string[];
      /** Is Active */
      is_active: boolean;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /** Last Login */
      last_login: string | null;
      /** Password Hash */
      password_hash?: string | null;
      /** Api Keys */
      api_keys?: string[];
      /**
       * Security Clearance
       * @default standard
       */
      security_clearance?: string;
    };
    /**
     * UserCreateRequest
     * @description User creation request model
     */
    UserCreateRequest: {
      /** Username */
      username: string;
      /** Password */
      password: string;
      /** Email */
      email: string;
      /** Full Name */
      full_name: string;
      /**
       * Role
       * @default user
       */
      role?: string;
    };
    /**
     * UserUpdateRequest
     * @description User update request model
     */
    UserUpdateRequest: {
      /** Email */
      email?: string | null;
      /** Full Name */
      full_name?: string | null;
      /** Role */
      role?: string | null;
      /** Is Active */
      is_active?: boolean | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Health Check
   * @description Primary health check endpoint consumed by dashboard ribbon.
   */
  health_check_api_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Detailed Health Check
   * @description Detailed health check with service connectivity tests.
   */
  detailed_health_check_api_health_detailed_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Tor Status
   * @description Expose Tor proxy status (no external network calls).
   */
  tor_status_tor_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * System Status Alias
   * @description Alias for /api/health to match frontend expectations.
   */
  system_status_alias_api_system_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Health Fallback
   * @description Fallback health endpoint without /api prefix for compatibility.
   */
  health_fallback_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Anonymity Tor Status
   * @description Alias for /tor/status under /api/anonymity path.
   */
  anonymity_tor_status_api_anonymity_tor_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * List Capabilities
   * @description List registered capabilities (static registry for now).
   */
  list_capabilities_api_capabilities_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CapabilityModel"][];
        };
      };
    };
  };
  /**
   * Get Investigation Plan
   * @description Return (build if absent) the plan for an investigation.
   */
  get_investigation_plan_api_investigations__investigation_id__plan_get: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PlanModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Execute All Tasks */
  execute_all_tasks_api_investigations__investigation_id__execute_all_post: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Investigation Provenance */
  investigation_provenance_api_investigations__investigation_id__evidence_provenance_get: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Geo Snapshot
   * @description Return a lightweight snapshot of geospatial intelligence data.
   * Currently returns placeholder points and flight routes for the mapping
   * widget. In future iterations this will aggregate:
   *   * Resolved IP geolocations (network / infrastructure module)
   *   * Flight paths (aviation intelligence module)
   *   * Potential infrastructure relationship lines
   *
   * Response schema:
   * {
   *   "generated_at": ISO8601,
   *   "ip_points": [ { ip, lat, lon, asn, label } ],
   *                 "flight_routes": [
   *                     {
   *                         flight,
   *                         from: {icao,lat,lon,city},
   *                         to: {...},
   *                         path: [[lat,lon],...],
   *                         status
   *                     }
   *                 ]
   * }
   * This endpoint is unauthenticated for rapid internal dashboard rendering.
   * DO NOT expose publicly without access controls.
   */
  geo_snapshot_api_geo_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * List Investigations
   * @description List user's investigations with optional filters and metadata.
   *
   * Query Params:
   *   skip, limit: pagination window
   *   status: optional status filter (created|running|completed|archived)
   *   include_archived: if true include archived items alongside active
   *   include_meta: if true wrap items with {items:[], meta:{total,skip,limit}}
   */
  list_investigations_api_investigations_get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
        status?: string | null;
        include_archived?: boolean;
        include_meta?: boolean;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Create Investigation
   * @description Create a new OSINT investigation
   */
  create_investigation_api_investigations_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvestigationCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Investigation
   * @description Get investigation details with results
   */
  get_investigation_api_investigations__investigation_id__get: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Start Investigation
   * @description Start OSINT investigation execution
   */
  start_investigation_api_investigations__investigation_id__start_post: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Investigation Tasks
   * @description Return detailed (optionally filtered/paginated) task list.
   *
   * Query params:
   *   skip, limit: pagination window.
   *   status: optional status filter
   *   task_type: optional task type filter
   *   include_meta: if true include metadata
   */
  investigation_tasks_api_investigations__investigation_id__tasks_get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
        status?: string | null;
        task_type?: string | null;
        include_meta?: boolean;
      };
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * List Modules
   * @description List all available OSINT modules with their metadata.
   */
  list_modules_api_modules_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * List Module Categories
   * @description List all available module categories.
   */
  list_module_categories_api_modules_categories_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Get Modules By Category Endpoint
   * @description Get all modules in a specific category.
   */
  get_modules_by_category_endpoint_api_modules_category__category__get: {
    parameters: {
      path: {
        category: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ModuleInfo"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Execute Module
   * @description Execute an OSINT module with given parameters.
   */
  execute_module_api_modules_execute_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModuleExecutionRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Module Info
   * @description Get detailed information about a specific module.
   */
  get_module_info_api_modules__module_name__get: {
    parameters: {
      path: {
        module_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Dev Token
   * @description Issue a development JWT for local VS Code extension.
   * Enabled ONLY in development mode with ENABLE_DEV_AUTH=1.
   * NEVER enable this in production.
   */
  dev_token_api_dev_token_post: {
    parameters: {
      query?: {
        sub?: string;
        expires_minutes?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Ai Analysis
   * @description Request AI analysis of investigation data
   */
  ai_analysis_api_ai_analyze_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AIAnalysisRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Generate Report
   * @description Generate investigation report with enhanced features
   */
  generate_report_api_reports_generate_post: {
    parameters: {
      query: {
        investigation_id: string;
        report_type?: string;
        format?: string;
        include_charts?: boolean;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Download Report
   * @description Download generated report file
   */
  download_report_api_reports_download__filename__get: {
    parameters: {
      path: {
        filename: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Schedule Report
   * @description Schedule recurring reports
   */
  schedule_report_api_reports_schedule_post: {
    requestBody: {
      content: {
        "application/json": {
          [key: string]: unknown;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Remove Scheduled Report
   * @description Remove a scheduled report
   */
  remove_scheduled_report_api_reports_schedule__schedule_id__delete: {
    parameters: {
      path: {
        schedule_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Parse Nlp Command
   * @description Parse natural language command and return execution plan
   */
  parse_nlp_command_api_nlp_parse_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NLPCommandRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Execute Nlp Command
   * @description Parse and execute natural language command
   */
  execute_nlp_command_api_nlp_execute_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NLPCommandRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Nlp Examples
   * @description Get example natural language commands
   */
  get_nlp_examples_api_nlp_examples_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * List Chat Conversations
   * @description List all conversations
   */
  list_chat_conversations_api_chat_conversations_get: {
    parameters: {
      query?: {
        investigation_id?: string | null;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Create Chat Conversation
   * @description Create a new chat conversation
   */
  create_chat_conversation_api_chat_conversations_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateConversationRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Add Chat Message
   * @description Add a message to a conversation
   */
  add_chat_message_api_chat_messages_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatMessageRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Chat Conversation
   * @description Get a conversation with all messages
   */
  get_chat_conversation_api_chat_conversations__conversation_id__get: {
    parameters: {
      path: {
        conversation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete Chat Conversation
   * @description Delete a conversation
   */
  delete_chat_conversation_api_chat_conversations__conversation_id__delete: {
    parameters: {
      path: {
        conversation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Search Chat Messages
   * @description Search messages by content
   */
  search_chat_messages_api_chat_search_get: {
    parameters: {
      query: {
        query: string;
        limit?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Chat Stats
   * @description Get chat history statistics
   */
  get_chat_stats_api_chat_stats_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Export Chat Conversation
   * @description Export a conversation to file
   */
  export_chat_conversation_api_chat_conversations__conversation_id__export_get: {
    parameters: {
      query?: {
        format?: string;
      };
      path: {
        conversation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Scheduled Reports
   * @description Get list of scheduled reports
   */
  get_scheduled_reports_api_reports_scheduled_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Process Scheduled Reports
   * @description Process all due scheduled reports (internal endpoint)
   */
  process_scheduled_reports_api_reports_process_scheduled_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Get Graph Statistics
   * @description Get graph database statistics
   */
  get_graph_statistics_api_graph_stats_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Create Graph Entity
   * @description Create an entity in the graph database
   */
  create_graph_entity_api_graph_entities_post: {
    requestBody: {
      content: {
        "application/json": {
          [key: string]: unknown;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Create Graph Relationship
   * @description Create a relationship in the graph database
   */
  create_graph_relationship_api_graph_relationships_post: {
    requestBody: {
      content: {
        "application/json": {
          [key: string]: unknown;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Related Entities
   * @description Get entities related to the specified entity
   */
  get_related_entities_api_graph_entities__entity_id__related_get: {
    parameters: {
      query?: {
        relationship_type?: string | null;
        max_depth?: number;
      };
      path: {
        entity_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Search Entities
   * @description Search for entities by name
   */
  search_entities_api_graph_entities_search_get: {
    parameters: {
      query: {
        name: string;
        entity_type?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Find Entity Path
   * @description Find the shortest path between two entities
   */
  find_entity_path_api_graph_path_get: {
    parameters: {
      query: {
        source_id: string;
        target_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Detect Communities
   * @description Detect communities/clusters in the graph
   */
  detect_communities_api_graph_communities_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Calculate Centrality
   * @description Calculate centrality measures for entities
   */
  calculate_centrality_api_graph_centrality_get: {
    parameters: {
      query?: {
        entity_type?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Import Investigation To Graph
   * @description Import investigation data into the graph database
   */
  import_investigation_to_graph_api_graph_import_post: {
    parameters: {
      query: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Export Graph Data
   * @description Export graph data for external analysis
   */
  export_graph_data_api_graph_export_get: {
    parameters: {
      query?: {
        format?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Feeds Status
   * @description Get the current status of all intelligence feeds
   */
  get_feeds_status_api_feeds_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Enable Feed
   * @description Enable a specific intelligence feed
   */
  enable_feed_api_feeds__feed_name__enable_post: {
    parameters: {
      path: {
        feed_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Disable Feed
   * @description Disable a specific intelligence feed
   */
  disable_feed_api_feeds__feed_name__disable_post: {
    parameters: {
      path: {
        feed_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Recent Alerts
   * @description Get recent intelligence alerts
   */
  get_recent_alerts_api_feeds_alerts_get: {
    parameters: {
      query?: {
        limit?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Acknowledge Alert
   * @description Acknowledge an intelligence alert
   */
  acknowledge_alert_api_feeds_alerts__alert_id__acknowledge_post: {
    parameters: {
      path: {
        alert_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Subscribe To Alerts
   * @description Subscribe to specific types of intelligence alerts
   */
  subscribe_to_alerts_api_feeds_subscribe_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_subscribe_to_alerts_api_feeds_subscribe_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Unsubscribe From Alerts
   * @description Unsubscribe from intelligence alerts
   */
  unsubscribe_from_alerts_api_feeds_subscription__subscription_id__delete: {
    parameters: {
      path: {
        subscription_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Feed Sources
   * @description Get information about available intelligence feed sources
   */
  get_feed_sources_api_feeds_sources_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Configure Feed Api Key
   * @description Configure API key and settings for a specific feed
   */
  configure_feed_api_key_api_feeds__feed_name__configure_post: {
    parameters: {
      path: {
        feed_name: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          [key: string]: unknown;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Add Custom Feed
   * @description Add a custom intelligence feed source
   */
  add_custom_feed_api_feeds_custom_post: {
    requestBody: {
      content: {
        "application/json": {
          [key: string]: unknown;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Remove Feed
   * @description Remove an intelligence feed source
   */
  remove_feed_api_feeds__feed_name__delete: {
    parameters: {
      path: {
        feed_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Test Feed Connection
   * @description Test connection to a specific intelligence feed
   */
  test_feed_connection_api_feeds__feed_name__test_post: {
    parameters: {
      path: {
        feed_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Seed Demo Tasks
   * @description Seed synthetic tasks for demo UI when advanced manager is not active.
   *
   * Returns list of synthetic tasks. If advanced manager present, instructs
   * user to rely on real tasks instead.
   */
  seed_demo_tasks_api_investigations__investigation_id__demo_seed_tasks_post: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Login
   * @description Authenticate user and return access token
   */
  login_auth_login_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LoginResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Logout
   * @description Logout user and invalidate session
   */
  logout_auth_logout_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Get Current User Info
   * @description Get current user information
   */
  get_current_user_info_auth_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * List Users
   * @description List users
   */
  list_users_users_get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Create User
   * @description Create new user
   */
  create_user_users_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_create_user_users_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Update User
   * @description Update user
   */
  update_user_users__user_id__put: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_update_user_users__user_id__put"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete User
   * @description Delete user
   */
  delete_user_users__user_id__delete: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * List Api Keys
   * @description List user's API keys
   */
  list_api_keys_auth_api_keys_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Create Api Key
   * @description Create API key
   */
  create_api_key_auth_api_keys_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["APIKeyCreateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APIKeyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Revoke Api Key
   * @description Revoke API key
   */
  revoke_api_key_auth_api_keys__key_id__delete: {
    parameters: {
      path: {
        key_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Security Report
   * @description Get security report
   */
  get_security_report_security_report_get: {
    parameters: {
      query?: {
        days?: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Compliance Report
   * @description Get compliance report
   */
  get_compliance_report_security_compliance_get: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Security Alerts
   * @description Get security alerts
   */
  get_security_alerts_security_alerts_get: {
    parameters: {
      query?: {
        status_filter?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Suggest Autopivots
   * @description Get AI-powered pivot suggestions for an investigation
   */
  suggest_autopivots_api_autopivot_suggest_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AutopivotRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Start Autonomous Investigation
   * @description Start fully autonomous investigation with automatic pivoting
   */
  start_autonomous_investigation_api_autopivot_autonomous_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AutonomousInvestigationRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Enhanced Offline Analysis
   * @description Get enhanced offline LLM analysis using local models (no API key required).
   * Provides detailed, user-friendly breakdown of findings.
   */
  enhanced_offline_analysis_api_enhanced_analyze_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["EnhancedAnalysisRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Create Investigation Tracking
   * @description Create investigation tracking for persistent findings storage
   */
  create_investigation_tracking_api_investigation_tracking_create_post: {
    parameters: {
      query: {
        investigation_id: string;
        name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Add Investigation Finding
   * @description Add a finding to investigation tracking (builds progressively without data loss)
   */
  add_investigation_finding_api_investigation_tracking_finding_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvestigationFindingRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Investigation Findings
   * @description Get all findings for an investigation
   */
  get_investigation_findings_api_investigation_tracking__investigation_id__findings_get: {
    parameters: {
      query?: {
        finding_type?: string | null;
      };
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Investigation Leads
   * @description Get all investigation leads with explanations
   */
  get_investigation_leads_api_investigation_tracking__investigation_id__leads_get: {
    parameters: {
      query?: {
        status?: string | null;
      };
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Investigation Summary
   * @description Get comprehensive investigation summary
   */
  get_investigation_summary_api_investigation_tracking__investigation_id__summary_get: {
    parameters: {
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Generate User Friendly Report
   * @description Generate comprehensive user-friendly report with detailed breakdowns.
   * Includes: What We Know, What We Think, What We Can Find, Why It Matters
   */
  generate_user_friendly_report_api_reports_user_friendly_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DetailedReportRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Export Investigation Data
   * @description Export complete investigation data (json or markdown)
   */
  export_investigation_data_api_investigation_tracking__investigation_id__export_get: {
    parameters: {
      query?: {
        format?: string;
      };
      path: {
        investigation_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
